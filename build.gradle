buildscript {
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'jvm-test-suite'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "io.freefair.lombok" version "8.4"
	id 'jacoco'
	id 'org.sonarqube' version "4.4.1.3373"
}
group = 'com.hh'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom 'io.micrometer:micrometer-tracing-bom:1.2.0'
	}
}

testing {
	suites {
		test {
			useJUnitJupiter()
		}
		integrationTest(JvmTestSuite) {
			dependencies {
				implementation project()
			}
		}
	}
}

test.finalizedBy(project.tasks.jacocoTestReport)

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		xml.outputLocation = file("${rootProject.projectDir}/build/reports/jacoco/test/jacocoTestReport.xml")
	}
	dependsOn test, integrationTest
}
task jacocoIntegrationTestReport(type: JacocoReport, dependsOn: ['integrationTest']) {
	sourceDirectories.from = files(sourceSets.main.allSource.srcDirs)
	classDirectories.from = files(sourceSets.main.output)
	executionData.from = layout.buildDirectory.file("jacoco/integrationTest.exec").get().asFile
	reports {
		xml.required = true
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco/integrationTest/html')
		xml.outputLocation = file("${rootProject.projectDir}/build/reports/jacoco/integrationTest/jacocoIntegrationTestReport.xml")
	}
}

integrationTest.finalizedBy(project.tasks.jacocoIntegrationTestReport)

configurations {
	integrationTestImplementation.extendsFrom(testImplementation)
	integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.0.2'

	implementation 'io.micrometer:micrometer-tracing'
	implementation "io.micrometer:micrometer-tracing-bridge-brave"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//for logback
	implementation 'ch.qos.logback:logback-core:1.4.7'
	implementation 'ch.qos.logback:logback-classic:1.4.7'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
}

sonar {
	properties {
		property 'sonar.host.url', 'http://localhost:9090'
		property 'sonar.gradle.skipCompile', true
		property 'sonar.projectName', 'KafkaCloudStream'
		property 'sonar.language', 'java'
		property 'sonar.projectKey', 'KafkaCloudStream'
		property 'sonar.token', 'squ_10ad1249a8bc7097293ec3cc5c92805f5ffe0ec3'
		property "sonar.java.codeCoveragePlugin", "jacoco"
		property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/integrationTest/jacocoIntegrationTestReport.xml"
	}
}